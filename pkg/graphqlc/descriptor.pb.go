// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: descriptor.proto

package graphqlc

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ExecutableDirectiveLocation int32

const (
	ExecutableDirectiveLocation_QUERY               ExecutableDirectiveLocation = 0
	ExecutableDirectiveLocation_MUTATION            ExecutableDirectiveLocation = 1
	ExecutableDirectiveLocation_SUBSCRIPTION        ExecutableDirectiveLocation = 2
	ExecutableDirectiveLocation_FIELD               ExecutableDirectiveLocation = 3
	ExecutableDirectiveLocation_FRAGMENT_DEFINITION ExecutableDirectiveLocation = 4
	ExecutableDirectiveLocation_FRAGMENT_SPREAD     ExecutableDirectiveLocation = 5
	ExecutableDirectiveLocation_INLINE_FRAGMENT     ExecutableDirectiveLocation = 6
)

// Enum value maps for ExecutableDirectiveLocation.
var (
	ExecutableDirectiveLocation_name = map[int32]string{
		0: "QUERY",
		1: "MUTATION",
		2: "SUBSCRIPTION",
		3: "FIELD",
		4: "FRAGMENT_DEFINITION",
		5: "FRAGMENT_SPREAD",
		6: "INLINE_FRAGMENT",
	}
	ExecutableDirectiveLocation_value = map[string]int32{
		"QUERY":               0,
		"MUTATION":            1,
		"SUBSCRIPTION":        2,
		"FIELD":               3,
		"FRAGMENT_DEFINITION": 4,
		"FRAGMENT_SPREAD":     5,
		"INLINE_FRAGMENT":     6,
	}
)

func (x ExecutableDirectiveLocation) Enum() *ExecutableDirectiveLocation {
	p := new(ExecutableDirectiveLocation)
	*p = x
	return p
}

func (x ExecutableDirectiveLocation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExecutableDirectiveLocation) Descriptor() protoreflect.EnumDescriptor {
	return file_descriptor_proto_enumTypes[0].Descriptor()
}

func (ExecutableDirectiveLocation) Type() protoreflect.EnumType {
	return &file_descriptor_proto_enumTypes[0]
}

func (x ExecutableDirectiveLocation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExecutableDirectiveLocation.Descriptor instead.
func (ExecutableDirectiveLocation) EnumDescriptor() ([]byte, []int) {
	return file_descriptor_proto_rawDescGZIP(), []int{0}
}

type TypeSystemDirectiveLocation int32

const (
	TypeSystemDirectiveLocation_SCHEMA                 TypeSystemDirectiveLocation = 0
	TypeSystemDirectiveLocation_SCALAR                 TypeSystemDirectiveLocation = 1
	TypeSystemDirectiveLocation_OBJECT                 TypeSystemDirectiveLocation = 2
	TypeSystemDirectiveLocation_FIELD_DEFINITION       TypeSystemDirectiveLocation = 3
	TypeSystemDirectiveLocation_ARGUMENT_DEFINITION    TypeSystemDirectiveLocation = 4
	TypeSystemDirectiveLocation_INTERFACE              TypeSystemDirectiveLocation = 5
	TypeSystemDirectiveLocation_UNION                  TypeSystemDirectiveLocation = 6
	TypeSystemDirectiveLocation_ENUM                   TypeSystemDirectiveLocation = 7
	TypeSystemDirectiveLocation_ENUM_VALUE             TypeSystemDirectiveLocation = 8
	TypeSystemDirectiveLocation_INPUT_OBJECT           TypeSystemDirectiveLocation = 9
	TypeSystemDirectiveLocation_INPUT_FIELD_DEFINITION TypeSystemDirectiveLocation = 10
)

// Enum value maps for TypeSystemDirectiveLocation.
var (
	TypeSystemDirectiveLocation_name = map[int32]string{
		0:  "SCHEMA",
		1:  "SCALAR",
		2:  "OBJECT",
		3:  "FIELD_DEFINITION",
		4:  "ARGUMENT_DEFINITION",
		5:  "INTERFACE",
		6:  "UNION",
		7:  "ENUM",
		8:  "ENUM_VALUE",
		9:  "INPUT_OBJECT",
		10: "INPUT_FIELD_DEFINITION",
	}
	TypeSystemDirectiveLocation_value = map[string]int32{
		"SCHEMA":                 0,
		"SCALAR":                 1,
		"OBJECT":                 2,
		"FIELD_DEFINITION":       3,
		"ARGUMENT_DEFINITION":    4,
		"INTERFACE":              5,
		"UNION":                  6,
		"ENUM":                   7,
		"ENUM_VALUE":             8,
		"INPUT_OBJECT":           9,
		"INPUT_FIELD_DEFINITION": 10,
	}
)

func (x TypeSystemDirectiveLocation) Enum() *TypeSystemDirectiveLocation {
	p := new(TypeSystemDirectiveLocation)
	*p = x
	return p
}

func (x TypeSystemDirectiveLocation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TypeSystemDirectiveLocation) Descriptor() protoreflect.EnumDescriptor {
	return file_descriptor_proto_enumTypes[1].Descriptor()
}

func (TypeSystemDirectiveLocation) Type() protoreflect.EnumType {
	return &file_descriptor_proto_enumTypes[1]
}

func (x TypeSystemDirectiveLocation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TypeSystemDirectiveLocation.Descriptor instead.
func (TypeSystemDirectiveLocation) EnumDescriptor() ([]byte, []int) {
	return file_descriptor_proto_rawDescGZIP(), []int{1}
}

// The protocol compiler can output a FileDescriptorSet containing the
// .graphql file it parses.
type FileDescriptorSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File []*FileDescriptorGraphql `protobuf:"bytes,1,rep,name=file,proto3" json:"file,omitempty"`
}

func (x *FileDescriptorSet) Reset() {
	*x = FileDescriptorSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_descriptor_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileDescriptorSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDescriptorSet) ProtoMessage() {}

func (x *FileDescriptorSet) ProtoReflect() protoreflect.Message {
	mi := &file_descriptor_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDescriptorSet.ProtoReflect.Descriptor instead.
func (*FileDescriptorSet) Descriptor() ([]byte, []int) {
	return file_descriptor_proto_rawDescGZIP(), []int{0}
}

func (x *FileDescriptorSet) GetFile() []*FileDescriptorGraphql {
	if x != nil {
		return x.File
	}
	return nil
}

// Describe a complete .graphql file
type FileDescriptorGraphql struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // file name, relative to root of source tree
	// All top-level definitions in this file.
	Schema         *SchemaDescriptorProto                      `protobuf:"bytes,2,opt,name=schema,proto3" json:"schema,omitempty"`
	TypeExtensions []*TypeSystemExtensionDescriptorProto       `protobuf:"bytes,10,rep,name=type_extensions,json=typeExtensions,proto3" json:"type_extensions,omitempty"`
	Directives     []*DirectiveDefinitionDescriptorProto       `protobuf:"bytes,9,rep,name=directives,proto3" json:"directives,omitempty"`
	Scalars        []*ScalarTypeDefinitionDescriptorProto      `protobuf:"bytes,3,rep,name=scalars,proto3" json:"scalars,omitempty"`
	Objects        []*ObjectTypeDefinitionDescriptorProto      `protobuf:"bytes,4,rep,name=objects,proto3" json:"objects,omitempty"`
	Interfaces     []*InterfaceTypeDefinitionDescriptorProto   `protobuf:"bytes,5,rep,name=interfaces,proto3" json:"interfaces,omitempty"`
	Unions         []*UnionTypeDefinitionDescriptorProto       `protobuf:"bytes,6,rep,name=unions,proto3" json:"unions,omitempty"`
	Enums          []*EnumTypeDefinitionDescriptorProto        `protobuf:"bytes,7,rep,name=enums,proto3" json:"enums,omitempty"`
	InputObjects   []*InputObjectTypeDefinitionDescriptorProto `protobuf:"bytes,8,rep,name=input_objects,json=inputObjects,proto3" json:"input_objects,omitempty"`
}

func (x *FileDescriptorGraphql) Reset() {
	*x = FileDescriptorGraphql{}
	if protoimpl.UnsafeEnabled {
		mi := &file_descriptor_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileDescriptorGraphql) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDescriptorGraphql) ProtoMessage() {}

func (x *FileDescriptorGraphql) ProtoReflect() protoreflect.Message {
	mi := &file_descriptor_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDescriptorGraphql.ProtoReflect.Descriptor instead.
func (*FileDescriptorGraphql) Descriptor() ([]byte, []int) {
	return file_descriptor_proto_rawDescGZIP(), []int{1}
}

func (x *FileDescriptorGraphql) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FileDescriptorGraphql) GetSchema() *SchemaDescriptorProto {
	if x != nil {
		return x.Schema
	}
	return nil
}

func (x *FileDescriptorGraphql) GetTypeExtensions() []*TypeSystemExtensionDescriptorProto {
	if x != nil {
		return x.TypeExtensions
	}
	return nil
}

func (x *FileDescriptorGraphql) GetDirectives() []*DirectiveDefinitionDescriptorProto {
	if x != nil {
		return x.Directives
	}
	return nil
}

func (x *FileDescriptorGraphql) GetScalars() []*ScalarTypeDefinitionDescriptorProto {
	if x != nil {
		return x.Scalars
	}
	return nil
}

func (x *FileDescriptorGraphql) GetObjects() []*ObjectTypeDefinitionDescriptorProto {
	if x != nil {
		return x.Objects
	}
	return nil
}

func (x *FileDescriptorGraphql) GetInterfaces() []*InterfaceTypeDefinitionDescriptorProto {
	if x != nil {
		return x.Interfaces
	}
	return nil
}

func (x *FileDescriptorGraphql) GetUnions() []*UnionTypeDefinitionDescriptorProto {
	if x != nil {
		return x.Unions
	}
	return nil
}

func (x *FileDescriptorGraphql) GetEnums() []*EnumTypeDefinitionDescriptorProto {
	if x != nil {
		return x.Enums
	}
	return nil
}

func (x *FileDescriptorGraphql) GetInputObjects() []*InputObjectTypeDefinitionDescriptorProto {
	if x != nil {
		return x.InputObjects
	}
	return nil
}

type SchemaDescriptorProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Directives   []*DirectiveDescriptorProto          `protobuf:"bytes,1,rep,name=directives,proto3" json:"directives,omitempty"`
	Query        *ObjectTypeDefinitionDescriptorProto `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	Mutation     *ObjectTypeDefinitionDescriptorProto `protobuf:"bytes,3,opt,name=mutation,proto3" json:"mutation,omitempty"`
	Subscription *ObjectTypeDefinitionDescriptorProto `protobuf:"bytes,4,opt,name=subscription,proto3" json:"subscription,omitempty"`
}

func (x *SchemaDescriptorProto) Reset() {
	*x = SchemaDescriptorProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_descriptor_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchemaDescriptorProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchemaDescriptorProto) ProtoMessage() {}

func (x *SchemaDescriptorProto) ProtoReflect() protoreflect.Message {
	mi := &file_descriptor_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchemaDescriptorProto.ProtoReflect.Descriptor instead.
func (*SchemaDescriptorProto) Descriptor() ([]byte, []int) {
	return file_descriptor_proto_rawDescGZIP(), []int{2}
}

func (x *SchemaDescriptorProto) GetDirectives() []*DirectiveDescriptorProto {
	if x != nil {
		return x.Directives
	}
	return nil
}

func (x *SchemaDescriptorProto) GetQuery() *ObjectTypeDefinitionDescriptorProto {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *SchemaDescriptorProto) GetMutation() *ObjectTypeDefinitionDescriptorProto {
	if x != nil {
		return x.Mutation
	}
	return nil
}

func (x *SchemaDescriptorProto) GetSubscription() *ObjectTypeDefinitionDescriptorProto {
	if x != nil {
		return x.Subscription
	}
	return nil
}

type DirectiveDefinitionDescriptorProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description string                                 `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	Name        string                                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Arguments   []*InputValueDefinitionDescriptorProto `protobuf:"bytes,3,rep,name=arguments,proto3" json:"arguments,omitempty"`
	Locations   []*DirectiveLocationDescriptorProto    `protobuf:"bytes,4,rep,name=locations,proto3" json:"locations,omitempty"`
}

func (x *DirectiveDefinitionDescriptorProto) Reset() {
	*x = DirectiveDefinitionDescriptorProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_descriptor_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectiveDefinitionDescriptorProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectiveDefinitionDescriptorProto) ProtoMessage() {}

func (x *DirectiveDefinitionDescriptorProto) ProtoReflect() protoreflect.Message {
	mi := &file_descriptor_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectiveDefinitionDescriptorProto.ProtoReflect.Descriptor instead.
func (*DirectiveDefinitionDescriptorProto) Descriptor() ([]byte, []int) {
	return file_descriptor_proto_rawDescGZIP(), []int{3}
}

func (x *DirectiveDefinitionDescriptorProto) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DirectiveDefinitionDescriptorProto) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DirectiveDefinitionDescriptorProto) GetArguments() []*InputValueDefinitionDescriptorProto {
	if x != nil {
		return x.Arguments
	}
	return nil
}

func (x *DirectiveDefinitionDescriptorProto) GetLocations() []*DirectiveLocationDescriptorProto {
	if x != nil {
		return x.Locations
	}
	return nil
}

type DirectiveLocationDescriptorProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Location:
	//	*DirectiveLocationDescriptorProto_ExecutableLocation
	//	*DirectiveLocationDescriptorProto_TypeSystemLocation
	Location isDirectiveLocationDescriptorProto_Location `protobuf_oneof:"location"`
}

func (x *DirectiveLocationDescriptorProto) Reset() {
	*x = DirectiveLocationDescriptorProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_descriptor_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectiveLocationDescriptorProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectiveLocationDescriptorProto) ProtoMessage() {}

func (x *DirectiveLocationDescriptorProto) ProtoReflect() protoreflect.Message {
	mi := &file_descriptor_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectiveLocationDescriptorProto.ProtoReflect.Descriptor instead.
func (*DirectiveLocationDescriptorProto) Descriptor() ([]byte, []int) {
	return file_descriptor_proto_rawDescGZIP(), []int{4}
}

func (m *DirectiveLocationDescriptorProto) GetLocation() isDirectiveLocationDescriptorProto_Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (x *DirectiveLocationDescriptorProto) GetExecutableLocation() ExecutableDirectiveLocation {
	if x, ok := x.GetLocation().(*DirectiveLocationDescriptorProto_ExecutableLocation); ok {
		return x.ExecutableLocation
	}
	return ExecutableDirectiveLocation_QUERY
}

func (x *DirectiveLocationDescriptorProto) GetTypeSystemLocation() TypeSystemDirectiveLocation {
	if x, ok := x.GetLocation().(*DirectiveLocationDescriptorProto_TypeSystemLocation); ok {
		return x.TypeSystemLocation
	}
	return TypeSystemDirectiveLocation_SCHEMA
}

type isDirectiveLocationDescriptorProto_Location interface {
	isDirectiveLocationDescriptorProto_Location()
}

type DirectiveLocationDescriptorProto_ExecutableLocation struct {
	ExecutableLocation ExecutableDirectiveLocation `protobuf:"varint,2,opt,name=executable_location,json=executableLocation,proto3,enum=graphqlc.ExecutableDirectiveLocation,oneof"`
}

type DirectiveLocationDescriptorProto_TypeSystemLocation struct {
	TypeSystemLocation TypeSystemDirectiveLocation `protobuf:"varint,3,opt,name=type_system_location,json=typeSystemLocation,proto3,enum=graphqlc.TypeSystemDirectiveLocation,oneof"`
}

func (*DirectiveLocationDescriptorProto_ExecutableLocation) isDirectiveLocationDescriptorProto_Location() {
}

func (*DirectiveLocationDescriptorProto_TypeSystemLocation) isDirectiveLocationDescriptorProto_Location() {
}

type ScalarTypeDefinitionDescriptorProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description string                      `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	Name        string                      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Directives  []*DirectiveDescriptorProto `protobuf:"bytes,3,rep,name=directives,proto3" json:"directives,omitempty"`
}

func (x *ScalarTypeDefinitionDescriptorProto) Reset() {
	*x = ScalarTypeDefinitionDescriptorProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_descriptor_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScalarTypeDefinitionDescriptorProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScalarTypeDefinitionDescriptorProto) ProtoMessage() {}

func (x *ScalarTypeDefinitionDescriptorProto) ProtoReflect() protoreflect.Message {
	mi := &file_descriptor_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScalarTypeDefinitionDescriptorProto.ProtoReflect.Descriptor instead.
func (*ScalarTypeDefinitionDescriptorProto) Descriptor() ([]byte, []int) {
	return file_descriptor_proto_rawDescGZIP(), []int{5}
}

func (x *ScalarTypeDefinitionDescriptorProto) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ScalarTypeDefinitionDescriptorProto) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ScalarTypeDefinitionDescriptorProto) GetDirectives() []*DirectiveDescriptorProto {
	if x != nil {
		return x.Directives
	}
	return nil
}

type ScalarTypeExtensionDescriptorProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string                      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Directives []*DirectiveDescriptorProto `protobuf:"bytes,2,rep,name=directives,proto3" json:"directives,omitempty"`
}

func (x *ScalarTypeExtensionDescriptorProto) Reset() {
	*x = ScalarTypeExtensionDescriptorProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_descriptor_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScalarTypeExtensionDescriptorProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScalarTypeExtensionDescriptorProto) ProtoMessage() {}

func (x *ScalarTypeExtensionDescriptorProto) ProtoReflect() protoreflect.Message {
	mi := &file_descriptor_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScalarTypeExtensionDescriptorProto.ProtoReflect.Descriptor instead.
func (*ScalarTypeExtensionDescriptorProto) Descriptor() ([]byte, []int) {
	return file_descriptor_proto_rawDescGZIP(), []int{6}
}

func (x *ScalarTypeExtensionDescriptorProto) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ScalarTypeExtensionDescriptorProto) GetDirectives() []*DirectiveDescriptorProto {
	if x != nil {
		return x.Directives
	}
	return nil
}

type ObjectTypeDefinitionDescriptorProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description string                                    `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	Name        string                                    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Implements  []*InterfaceTypeDefinitionDescriptorProto `protobuf:"bytes,3,rep,name=implements,proto3" json:"implements,omitempty"`
	Directives  []*DirectiveDescriptorProto               `protobuf:"bytes,4,rep,name=directives,proto3" json:"directives,omitempty"`
	Fields      []*FieldDefinitionDescriptorProto         `protobuf:"bytes,5,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *ObjectTypeDefinitionDescriptorProto) Reset() {
	*x = ObjectTypeDefinitionDescriptorProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_descriptor_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectTypeDefinitionDescriptorProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectTypeDefinitionDescriptorProto) ProtoMessage() {}

func (x *ObjectTypeDefinitionDescriptorProto) ProtoReflect() protoreflect.Message {
	mi := &file_descriptor_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectTypeDefinitionDescriptorProto.ProtoReflect.Descriptor instead.
func (*ObjectTypeDefinitionDescriptorProto) Descriptor() ([]byte, []int) {
	return file_descriptor_proto_rawDescGZIP(), []int{7}
}

func (x *ObjectTypeDefinitionDescriptorProto) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ObjectTypeDefinitionDescriptorProto) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ObjectTypeDefinitionDescriptorProto) GetImplements() []*InterfaceTypeDefinitionDescriptorProto {
	if x != nil {
		return x.Implements
	}
	return nil
}

func (x *ObjectTypeDefinitionDescriptorProto) GetDirectives() []*DirectiveDescriptorProto {
	if x != nil {
		return x.Directives
	}
	return nil
}

func (x *ObjectTypeDefinitionDescriptorProto) GetFields() []*FieldDefinitionDescriptorProto {
	if x != nil {
		return x.Fields
	}
	return nil
}

type ObjectTypeExtensionDescriptorProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string                                    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Implements []*InterfaceTypeDefinitionDescriptorProto `protobuf:"bytes,3,rep,name=implements,proto3" json:"implements,omitempty"`
	Directives []*DirectiveDescriptorProto               `protobuf:"bytes,4,rep,name=directives,proto3" json:"directives,omitempty"`
	Fields     []*FieldDefinitionDescriptorProto         `protobuf:"bytes,5,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *ObjectTypeExtensionDescriptorProto) Reset() {
	*x = ObjectTypeExtensionDescriptorProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_descriptor_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectTypeExtensionDescriptorProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectTypeExtensionDescriptorProto) ProtoMessage() {}

func (x *ObjectTypeExtensionDescriptorProto) ProtoReflect() protoreflect.Message {
	mi := &file_descriptor_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectTypeExtensionDescriptorProto.ProtoReflect.Descriptor instead.
func (*ObjectTypeExtensionDescriptorProto) Descriptor() ([]byte, []int) {
	return file_descriptor_proto_rawDescGZIP(), []int{8}
}

func (x *ObjectTypeExtensionDescriptorProto) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ObjectTypeExtensionDescriptorProto) GetImplements() []*InterfaceTypeDefinitionDescriptorProto {
	if x != nil {
		return x.Implements
	}
	return nil
}

func (x *ObjectTypeExtensionDescriptorProto) GetDirectives() []*DirectiveDescriptorProto {
	if x != nil {
		return x.Directives
	}
	return nil
}

func (x *ObjectTypeExtensionDescriptorProto) GetFields() []*FieldDefinitionDescriptorProto {
	if x != nil {
		return x.Fields
	}
	return nil
}

type InterfaceTypeDefinitionDescriptorProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description string                            `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	Name        string                            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Directives  []*DirectiveDescriptorProto       `protobuf:"bytes,3,rep,name=directives,proto3" json:"directives,omitempty"`
	Fields      []*FieldDefinitionDescriptorProto `protobuf:"bytes,4,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *InterfaceTypeDefinitionDescriptorProto) Reset() {
	*x = InterfaceTypeDefinitionDescriptorProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_descriptor_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterfaceTypeDefinitionDescriptorProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterfaceTypeDefinitionDescriptorProto) ProtoMessage() {}

func (x *InterfaceTypeDefinitionDescriptorProto) ProtoReflect() protoreflect.Message {
	mi := &file_descriptor_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterfaceTypeDefinitionDescriptorProto.ProtoReflect.Descriptor instead.
func (*InterfaceTypeDefinitionDescriptorProto) Descriptor() ([]byte, []int) {
	return file_descriptor_proto_rawDescGZIP(), []int{9}
}

func (x *InterfaceTypeDefinitionDescriptorProto) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *InterfaceTypeDefinitionDescriptorProto) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InterfaceTypeDefinitionDescriptorProto) GetDirectives() []*DirectiveDescriptorProto {
	if x != nil {
		return x.Directives
	}
	return nil
}

func (x *InterfaceTypeDefinitionDescriptorProto) GetFields() []*FieldDefinitionDescriptorProto {
	if x != nil {
		return x.Fields
	}
	return nil
}

type InterfaceTypeExtensionDescriptorProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string                            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Directives []*DirectiveDescriptorProto       `protobuf:"bytes,2,rep,name=directives,proto3" json:"directives,omitempty"`
	Fields     []*FieldDefinitionDescriptorProto `protobuf:"bytes,3,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *InterfaceTypeExtensionDescriptorProto) Reset() {
	*x = InterfaceTypeExtensionDescriptorProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_descriptor_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterfaceTypeExtensionDescriptorProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterfaceTypeExtensionDescriptorProto) ProtoMessage() {}

func (x *InterfaceTypeExtensionDescriptorProto) ProtoReflect() protoreflect.Message {
	mi := &file_descriptor_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterfaceTypeExtensionDescriptorProto.ProtoReflect.Descriptor instead.
func (*InterfaceTypeExtensionDescriptorProto) Descriptor() ([]byte, []int) {
	return file_descriptor_proto_rawDescGZIP(), []int{10}
}

func (x *InterfaceTypeExtensionDescriptorProto) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InterfaceTypeExtensionDescriptorProto) GetDirectives() []*DirectiveDescriptorProto {
	if x != nil {
		return x.Directives
	}
	return nil
}

func (x *InterfaceTypeExtensionDescriptorProto) GetFields() []*FieldDefinitionDescriptorProto {
	if x != nil {
		return x.Fields
	}
	return nil
}

type UnionTypeDefinitionDescriptorProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description string                      `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	Name        string                      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Directives  []*DirectiveDescriptorProto `protobuf:"bytes,3,rep,name=directives,proto3" json:"directives,omitempty"`
	MemberTypes []*NamedTypeDescriptorProto `protobuf:"bytes,4,rep,name=member_types,json=memberTypes,proto3" json:"member_types,omitempty"`
}

func (x *UnionTypeDefinitionDescriptorProto) Reset() {
	*x = UnionTypeDefinitionDescriptorProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_descriptor_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionTypeDefinitionDescriptorProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionTypeDefinitionDescriptorProto) ProtoMessage() {}

func (x *UnionTypeDefinitionDescriptorProto) ProtoReflect() protoreflect.Message {
	mi := &file_descriptor_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionTypeDefinitionDescriptorProto.ProtoReflect.Descriptor instead.
func (*UnionTypeDefinitionDescriptorProto) Descriptor() ([]byte, []int) {
	return file_descriptor_proto_rawDescGZIP(), []int{11}
}

func (x *UnionTypeDefinitionDescriptorProto) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UnionTypeDefinitionDescriptorProto) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UnionTypeDefinitionDescriptorProto) GetDirectives() []*DirectiveDescriptorProto {
	if x != nil {
		return x.Directives
	}
	return nil
}

func (x *UnionTypeDefinitionDescriptorProto) GetMemberTypes() []*NamedTypeDescriptorProto {
	if x != nil {
		return x.MemberTypes
	}
	return nil
}

type UnionTypeExtensionDefinitionDescriptorProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string                      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Directives  []*DirectiveDescriptorProto `protobuf:"bytes,2,rep,name=directives,proto3" json:"directives,omitempty"`
	MemberTypes []*NamedTypeDescriptorProto `protobuf:"bytes,3,rep,name=member_types,json=memberTypes,proto3" json:"member_types,omitempty"`
}

func (x *UnionTypeExtensionDefinitionDescriptorProto) Reset() {
	*x = UnionTypeExtensionDefinitionDescriptorProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_descriptor_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionTypeExtensionDefinitionDescriptorProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionTypeExtensionDefinitionDescriptorProto) ProtoMessage() {}

func (x *UnionTypeExtensionDefinitionDescriptorProto) ProtoReflect() protoreflect.Message {
	mi := &file_descriptor_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionTypeExtensionDefinitionDescriptorProto.ProtoReflect.Descriptor instead.
func (*UnionTypeExtensionDefinitionDescriptorProto) Descriptor() ([]byte, []int) {
	return file_descriptor_proto_rawDescGZIP(), []int{12}
}

func (x *UnionTypeExtensionDefinitionDescriptorProto) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UnionTypeExtensionDefinitionDescriptorProto) GetDirectives() []*DirectiveDescriptorProto {
	if x != nil {
		return x.Directives
	}
	return nil
}

func (x *UnionTypeExtensionDefinitionDescriptorProto) GetMemberTypes() []*NamedTypeDescriptorProto {
	if x != nil {
		return x.MemberTypes
	}
	return nil
}

type EnumTypeDefinitionDescriptorProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description string                            `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	Name        string                            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Directives  []*DirectiveDescriptorProto       `protobuf:"bytes,3,rep,name=directives,proto3" json:"directives,omitempty"`
	Values      []*EnumValueDefinitionDescription `protobuf:"bytes,4,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *EnumTypeDefinitionDescriptorProto) Reset() {
	*x = EnumTypeDefinitionDescriptorProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_descriptor_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnumTypeDefinitionDescriptorProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnumTypeDefinitionDescriptorProto) ProtoMessage() {}

func (x *EnumTypeDefinitionDescriptorProto) ProtoReflect() protoreflect.Message {
	mi := &file_descriptor_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnumTypeDefinitionDescriptorProto.ProtoReflect.Descriptor instead.
func (*EnumTypeDefinitionDescriptorProto) Descriptor() ([]byte, []int) {
	return file_descriptor_proto_rawDescGZIP(), []int{13}
}

func (x *EnumTypeDefinitionDescriptorProto) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *EnumTypeDefinitionDescriptorProto) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EnumTypeDefinitionDescriptorProto) GetDirectives() []*DirectiveDescriptorProto {
	if x != nil {
		return x.Directives
	}
	return nil
}

func (x *EnumTypeDefinitionDescriptorProto) GetValues() []*EnumValueDefinitionDescription {
	if x != nil {
		return x.Values
	}
	return nil
}

type EnumTypeExtensionDefinitionDescriptorProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string                            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Directives []*DirectiveDescriptorProto       `protobuf:"bytes,2,rep,name=directives,proto3" json:"directives,omitempty"`
	Values     []*EnumValueDefinitionDescription `protobuf:"bytes,3,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *EnumTypeExtensionDefinitionDescriptorProto) Reset() {
	*x = EnumTypeExtensionDefinitionDescriptorProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_descriptor_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnumTypeExtensionDefinitionDescriptorProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnumTypeExtensionDefinitionDescriptorProto) ProtoMessage() {}

func (x *EnumTypeExtensionDefinitionDescriptorProto) ProtoReflect() protoreflect.Message {
	mi := &file_descriptor_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnumTypeExtensionDefinitionDescriptorProto.ProtoReflect.Descriptor instead.
func (*EnumTypeExtensionDefinitionDescriptorProto) Descriptor() ([]byte, []int) {
	return file_descriptor_proto_rawDescGZIP(), []int{14}
}

func (x *EnumTypeExtensionDefinitionDescriptorProto) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EnumTypeExtensionDefinitionDescriptorProto) GetDirectives() []*DirectiveDescriptorProto {
	if x != nil {
		return x.Directives
	}
	return nil
}

func (x *EnumTypeExtensionDefinitionDescriptorProto) GetValues() []*EnumValueDefinitionDescription {
	if x != nil {
		return x.Values
	}
	return nil
}

type InputObjectTypeDefinitionDescriptorProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description string                                 `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	Name        string                                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Directives  []*DirectiveDescriptorProto            `protobuf:"bytes,3,rep,name=directives,proto3" json:"directives,omitempty"`
	Fields      []*InputValueDefinitionDescriptorProto `protobuf:"bytes,4,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *InputObjectTypeDefinitionDescriptorProto) Reset() {
	*x = InputObjectTypeDefinitionDescriptorProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_descriptor_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputObjectTypeDefinitionDescriptorProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputObjectTypeDefinitionDescriptorProto) ProtoMessage() {}

func (x *InputObjectTypeDefinitionDescriptorProto) ProtoReflect() protoreflect.Message {
	mi := &file_descriptor_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputObjectTypeDefinitionDescriptorProto.ProtoReflect.Descriptor instead.
func (*InputObjectTypeDefinitionDescriptorProto) Descriptor() ([]byte, []int) {
	return file_descriptor_proto_rawDescGZIP(), []int{15}
}

func (x *InputObjectTypeDefinitionDescriptorProto) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *InputObjectTypeDefinitionDescriptorProto) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InputObjectTypeDefinitionDescriptorProto) GetDirectives() []*DirectiveDescriptorProto {
	if x != nil {
		return x.Directives
	}
	return nil
}

func (x *InputObjectTypeDefinitionDescriptorProto) GetFields() []*InputValueDefinitionDescriptorProto {
	if x != nil {
		return x.Fields
	}
	return nil
}

type InputObjectTypeExtensionDefinitionDescriptorProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string                                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Directives []*DirectiveDescriptorProto            `protobuf:"bytes,2,rep,name=directives,proto3" json:"directives,omitempty"`
	Fields     []*InputValueDefinitionDescriptorProto `protobuf:"bytes,3,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *InputObjectTypeExtensionDefinitionDescriptorProto) Reset() {
	*x = InputObjectTypeExtensionDefinitionDescriptorProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_descriptor_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputObjectTypeExtensionDefinitionDescriptorProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputObjectTypeExtensionDefinitionDescriptorProto) ProtoMessage() {}

func (x *InputObjectTypeExtensionDefinitionDescriptorProto) ProtoReflect() protoreflect.Message {
	mi := &file_descriptor_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputObjectTypeExtensionDefinitionDescriptorProto.ProtoReflect.Descriptor instead.
func (*InputObjectTypeExtensionDefinitionDescriptorProto) Descriptor() ([]byte, []int) {
	return file_descriptor_proto_rawDescGZIP(), []int{16}
}

func (x *InputObjectTypeExtensionDefinitionDescriptorProto) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InputObjectTypeExtensionDefinitionDescriptorProto) GetDirectives() []*DirectiveDescriptorProto {
	if x != nil {
		return x.Directives
	}
	return nil
}

func (x *InputObjectTypeExtensionDefinitionDescriptorProto) GetFields() []*InputValueDefinitionDescriptorProto {
	if x != nil {
		return x.Fields
	}
	return nil
}

type TypeSystemExtensionDescriptorProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Extension:
	//	*TypeSystemExtensionDescriptorProto_SchemaExtension
	//	*TypeSystemExtensionDescriptorProto_TypeExtension
	Extension isTypeSystemExtensionDescriptorProto_Extension `protobuf_oneof:"extension"`
}

func (x *TypeSystemExtensionDescriptorProto) Reset() {
	*x = TypeSystemExtensionDescriptorProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_descriptor_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypeSystemExtensionDescriptorProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeSystemExtensionDescriptorProto) ProtoMessage() {}

func (x *TypeSystemExtensionDescriptorProto) ProtoReflect() protoreflect.Message {
	mi := &file_descriptor_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeSystemExtensionDescriptorProto.ProtoReflect.Descriptor instead.
func (*TypeSystemExtensionDescriptorProto) Descriptor() ([]byte, []int) {
	return file_descriptor_proto_rawDescGZIP(), []int{17}
}

func (m *TypeSystemExtensionDescriptorProto) GetExtension() isTypeSystemExtensionDescriptorProto_Extension {
	if m != nil {
		return m.Extension
	}
	return nil
}

func (x *TypeSystemExtensionDescriptorProto) GetSchemaExtension() *SchemaExtensionDescriptorProto {
	if x, ok := x.GetExtension().(*TypeSystemExtensionDescriptorProto_SchemaExtension); ok {
		return x.SchemaExtension
	}
	return nil
}

func (x *TypeSystemExtensionDescriptorProto) GetTypeExtension() *TypeExtensionDescriptorProto {
	if x, ok := x.GetExtension().(*TypeSystemExtensionDescriptorProto_TypeExtension); ok {
		return x.TypeExtension
	}
	return nil
}

type isTypeSystemExtensionDescriptorProto_Extension interface {
	isTypeSystemExtensionDescriptorProto_Extension()
}

type TypeSystemExtensionDescriptorProto_SchemaExtension struct {
	SchemaExtension *SchemaExtensionDescriptorProto `protobuf:"bytes,1,opt,name=schema_extension,json=schemaExtension,proto3,oneof"`
}

type TypeSystemExtensionDescriptorProto_TypeExtension struct {
	TypeExtension *TypeExtensionDescriptorProto `protobuf:"bytes,2,opt,name=type_extension,json=typeExtension,proto3,oneof"`
}

func (*TypeSystemExtensionDescriptorProto_SchemaExtension) isTypeSystemExtensionDescriptorProto_Extension() {
}

func (*TypeSystemExtensionDescriptorProto_TypeExtension) isTypeSystemExtensionDescriptorProto_Extension() {
}

type SchemaExtensionDescriptorProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Directives               []*DirectiveDescriptorProto `protobuf:"bytes,1,rep,name=directives,proto3" json:"directives,omitempty"`
	OperationTypeDefinitions []*NamedTypeDescriptorProto `protobuf:"bytes,2,rep,name=operation_type_definitions,json=operationTypeDefinitions,proto3" json:"operation_type_definitions,omitempty"`
}

func (x *SchemaExtensionDescriptorProto) Reset() {
	*x = SchemaExtensionDescriptorProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_descriptor_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchemaExtensionDescriptorProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchemaExtensionDescriptorProto) ProtoMessage() {}

func (x *SchemaExtensionDescriptorProto) ProtoReflect() protoreflect.Message {
	mi := &file_descriptor_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchemaExtensionDescriptorProto.ProtoReflect.Descriptor instead.
func (*SchemaExtensionDescriptorProto) Descriptor() ([]byte, []int) {
	return file_descriptor_proto_rawDescGZIP(), []int{18}
}

func (x *SchemaExtensionDescriptorProto) GetDirectives() []*DirectiveDescriptorProto {
	if x != nil {
		return x.Directives
	}
	return nil
}

func (x *SchemaExtensionDescriptorProto) GetOperationTypeDefinitions() []*NamedTypeDescriptorProto {
	if x != nil {
		return x.OperationTypeDefinitions
	}
	return nil
}

type TypeExtensionDescriptorProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to TypeExtension:
	//	*TypeExtensionDescriptorProto_ScalarTypeExtension
	//	*TypeExtensionDescriptorProto_ObjectTypeExtension
	//	*TypeExtensionDescriptorProto_InterfaceTypeExtension
	//	*TypeExtensionDescriptorProto_UnionTypeExtension
	//	*TypeExtensionDescriptorProto_EnumTypeExtions
	//	*TypeExtensionDescriptorProto_InputObjectTypeExtension
	TypeExtension isTypeExtensionDescriptorProto_TypeExtension `protobuf_oneof:"type_extension"`
}

func (x *TypeExtensionDescriptorProto) Reset() {
	*x = TypeExtensionDescriptorProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_descriptor_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypeExtensionDescriptorProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeExtensionDescriptorProto) ProtoMessage() {}

func (x *TypeExtensionDescriptorProto) ProtoReflect() protoreflect.Message {
	mi := &file_descriptor_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeExtensionDescriptorProto.ProtoReflect.Descriptor instead.
func (*TypeExtensionDescriptorProto) Descriptor() ([]byte, []int) {
	return file_descriptor_proto_rawDescGZIP(), []int{19}
}

func (m *TypeExtensionDescriptorProto) GetTypeExtension() isTypeExtensionDescriptorProto_TypeExtension {
	if m != nil {
		return m.TypeExtension
	}
	return nil
}

func (x *TypeExtensionDescriptorProto) GetScalarTypeExtension() *ScalarTypeExtensionDescriptorProto {
	if x, ok := x.GetTypeExtension().(*TypeExtensionDescriptorProto_ScalarTypeExtension); ok {
		return x.ScalarTypeExtension
	}
	return nil
}

func (x *TypeExtensionDescriptorProto) GetObjectTypeExtension() *ObjectTypeExtensionDescriptorProto {
	if x, ok := x.GetTypeExtension().(*TypeExtensionDescriptorProto_ObjectTypeExtension); ok {
		return x.ObjectTypeExtension
	}
	return nil
}

func (x *TypeExtensionDescriptorProto) GetInterfaceTypeExtension() *InterfaceTypeExtensionDescriptorProto {
	if x, ok := x.GetTypeExtension().(*TypeExtensionDescriptorProto_InterfaceTypeExtension); ok {
		return x.InterfaceTypeExtension
	}
	return nil
}

func (x *TypeExtensionDescriptorProto) GetUnionTypeExtension() *UnionTypeExtensionDefinitionDescriptorProto {
	if x, ok := x.GetTypeExtension().(*TypeExtensionDescriptorProto_UnionTypeExtension); ok {
		return x.UnionTypeExtension
	}
	return nil
}

func (x *TypeExtensionDescriptorProto) GetEnumTypeExtions() *EnumTypeExtensionDefinitionDescriptorProto {
	if x, ok := x.GetTypeExtension().(*TypeExtensionDescriptorProto_EnumTypeExtions); ok {
		return x.EnumTypeExtions
	}
	return nil
}

func (x *TypeExtensionDescriptorProto) GetInputObjectTypeExtension() *InputObjectTypeExtensionDefinitionDescriptorProto {
	if x, ok := x.GetTypeExtension().(*TypeExtensionDescriptorProto_InputObjectTypeExtension); ok {
		return x.InputObjectTypeExtension
	}
	return nil
}

type isTypeExtensionDescriptorProto_TypeExtension interface {
	isTypeExtensionDescriptorProto_TypeExtension()
}

type TypeExtensionDescriptorProto_ScalarTypeExtension struct {
	ScalarTypeExtension *ScalarTypeExtensionDescriptorProto `protobuf:"bytes,1,opt,name=scalar_type_extension,json=scalarTypeExtension,proto3,oneof"`
}

type TypeExtensionDescriptorProto_ObjectTypeExtension struct {
	ObjectTypeExtension *ObjectTypeExtensionDescriptorProto `protobuf:"bytes,2,opt,name=object_type_extension,json=objectTypeExtension,proto3,oneof"`
}

type TypeExtensionDescriptorProto_InterfaceTypeExtension struct {
	InterfaceTypeExtension *InterfaceTypeExtensionDescriptorProto `protobuf:"bytes,3,opt,name=interface_type_extension,json=interfaceTypeExtension,proto3,oneof"`
}

type TypeExtensionDescriptorProto_UnionTypeExtension struct {
	UnionTypeExtension *UnionTypeExtensionDefinitionDescriptorProto `protobuf:"bytes,4,opt,name=union_type_extension,json=unionTypeExtension,proto3,oneof"`
}

type TypeExtensionDescriptorProto_EnumTypeExtions struct {
	EnumTypeExtions *EnumTypeExtensionDefinitionDescriptorProto `protobuf:"bytes,5,opt,name=enum_type_extions,json=enumTypeExtions,proto3,oneof"`
}

type TypeExtensionDescriptorProto_InputObjectTypeExtension struct {
	InputObjectTypeExtension *InputObjectTypeExtensionDefinitionDescriptorProto `protobuf:"bytes,6,opt,name=input_object_type_extension,json=inputObjectTypeExtension,proto3,oneof"`
}

func (*TypeExtensionDescriptorProto_ScalarTypeExtension) isTypeExtensionDescriptorProto_TypeExtension() {
}

func (*TypeExtensionDescriptorProto_ObjectTypeExtension) isTypeExtensionDescriptorProto_TypeExtension() {
}

func (*TypeExtensionDescriptorProto_InterfaceTypeExtension) isTypeExtensionDescriptorProto_TypeExtension() {
}

func (*TypeExtensionDescriptorProto_UnionTypeExtension) isTypeExtensionDescriptorProto_TypeExtension() {
}

func (*TypeExtensionDescriptorProto_EnumTypeExtions) isTypeExtensionDescriptorProto_TypeExtension() {}

func (*TypeExtensionDescriptorProto_InputObjectTypeExtension) isTypeExtensionDescriptorProto_TypeExtension() {
}

type EnumValueDefinitionDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description string                      `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	Value       string                      `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Directives  []*DirectiveDescriptorProto `protobuf:"bytes,3,rep,name=directives,proto3" json:"directives,omitempty"`
}

func (x *EnumValueDefinitionDescription) Reset() {
	*x = EnumValueDefinitionDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_descriptor_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnumValueDefinitionDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnumValueDefinitionDescription) ProtoMessage() {}

func (x *EnumValueDefinitionDescription) ProtoReflect() protoreflect.Message {
	mi := &file_descriptor_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnumValueDefinitionDescription.ProtoReflect.Descriptor instead.
func (*EnumValueDefinitionDescription) Descriptor() ([]byte, []int) {
	return file_descriptor_proto_rawDescGZIP(), []int{20}
}

func (x *EnumValueDefinitionDescription) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *EnumValueDefinitionDescription) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *EnumValueDefinitionDescription) GetDirectives() []*DirectiveDescriptorProto {
	if x != nil {
		return x.Directives
	}
	return nil
}

type FieldDefinitionDescriptorProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description string                                 `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	Name        string                                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Arguments   []*InputValueDefinitionDescriptorProto `protobuf:"bytes,3,rep,name=arguments,proto3" json:"arguments,omitempty"`
	Type        *TypeDescriptorProto                   `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Directives  []*DirectiveDescriptorProto            `protobuf:"bytes,5,rep,name=directives,proto3" json:"directives,omitempty"`
}

func (x *FieldDefinitionDescriptorProto) Reset() {
	*x = FieldDefinitionDescriptorProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_descriptor_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldDefinitionDescriptorProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldDefinitionDescriptorProto) ProtoMessage() {}

func (x *FieldDefinitionDescriptorProto) ProtoReflect() protoreflect.Message {
	mi := &file_descriptor_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldDefinitionDescriptorProto.ProtoReflect.Descriptor instead.
func (*FieldDefinitionDescriptorProto) Descriptor() ([]byte, []int) {
	return file_descriptor_proto_rawDescGZIP(), []int{21}
}

func (x *FieldDefinitionDescriptorProto) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *FieldDefinitionDescriptorProto) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FieldDefinitionDescriptorProto) GetArguments() []*InputValueDefinitionDescriptorProto {
	if x != nil {
		return x.Arguments
	}
	return nil
}

func (x *FieldDefinitionDescriptorProto) GetType() *TypeDescriptorProto {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *FieldDefinitionDescriptorProto) GetDirectives() []*DirectiveDescriptorProto {
	if x != nil {
		return x.Directives
	}
	return nil
}

type InputValueDefinitionDescriptorProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description  string                      `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	Name         string                      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type         *TypeDescriptorProto        `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	DefaultValue *ValueDescriptorProto       `protobuf:"bytes,4,opt,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
	Directives   []*DirectiveDescriptorProto `protobuf:"bytes,5,rep,name=directives,proto3" json:"directives,omitempty"`
}

func (x *InputValueDefinitionDescriptorProto) Reset() {
	*x = InputValueDefinitionDescriptorProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_descriptor_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputValueDefinitionDescriptorProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputValueDefinitionDescriptorProto) ProtoMessage() {}

func (x *InputValueDefinitionDescriptorProto) ProtoReflect() protoreflect.Message {
	mi := &file_descriptor_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputValueDefinitionDescriptorProto.ProtoReflect.Descriptor instead.
func (*InputValueDefinitionDescriptorProto) Descriptor() ([]byte, []int) {
	return file_descriptor_proto_rawDescGZIP(), []int{22}
}

func (x *InputValueDefinitionDescriptorProto) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *InputValueDefinitionDescriptorProto) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InputValueDefinitionDescriptorProto) GetType() *TypeDescriptorProto {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *InputValueDefinitionDescriptorProto) GetDefaultValue() *ValueDescriptorProto {
	if x != nil {
		return x.DefaultValue
	}
	return nil
}

func (x *InputValueDefinitionDescriptorProto) GetDirectives() []*DirectiveDescriptorProto {
	if x != nil {
		return x.Directives
	}
	return nil
}

type TypeDescriptorProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//	*TypeDescriptorProto_NamedType
	//	*TypeDescriptorProto_ListType
	//	*TypeDescriptorProto_NonNullType
	Type isTypeDescriptorProto_Type `protobuf_oneof:"type"`
}

func (x *TypeDescriptorProto) Reset() {
	*x = TypeDescriptorProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_descriptor_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypeDescriptorProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeDescriptorProto) ProtoMessage() {}

func (x *TypeDescriptorProto) ProtoReflect() protoreflect.Message {
	mi := &file_descriptor_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeDescriptorProto.ProtoReflect.Descriptor instead.
func (*TypeDescriptorProto) Descriptor() ([]byte, []int) {
	return file_descriptor_proto_rawDescGZIP(), []int{23}
}

func (m *TypeDescriptorProto) GetType() isTypeDescriptorProto_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *TypeDescriptorProto) GetNamedType() *NamedTypeDescriptorProto {
	if x, ok := x.GetType().(*TypeDescriptorProto_NamedType); ok {
		return x.NamedType
	}
	return nil
}

func (x *TypeDescriptorProto) GetListType() *ListTypeDescriptorProto {
	if x, ok := x.GetType().(*TypeDescriptorProto_ListType); ok {
		return x.ListType
	}
	return nil
}

func (x *TypeDescriptorProto) GetNonNullType() *NonNullTypeDescriptorProto {
	if x, ok := x.GetType().(*TypeDescriptorProto_NonNullType); ok {
		return x.NonNullType
	}
	return nil
}

type isTypeDescriptorProto_Type interface {
	isTypeDescriptorProto_Type()
}

type TypeDescriptorProto_NamedType struct {
	NamedType *NamedTypeDescriptorProto `protobuf:"bytes,1,opt,name=named_type,json=namedType,proto3,oneof"`
}

type TypeDescriptorProto_ListType struct {
	ListType *ListTypeDescriptorProto `protobuf:"bytes,2,opt,name=list_type,json=listType,proto3,oneof"`
}

type TypeDescriptorProto_NonNullType struct {
	NonNullType *NonNullTypeDescriptorProto `protobuf:"bytes,3,opt,name=non_null_type,json=nonNullType,proto3,oneof"`
}

func (*TypeDescriptorProto_NamedType) isTypeDescriptorProto_Type() {}

func (*TypeDescriptorProto_ListType) isTypeDescriptorProto_Type() {}

func (*TypeDescriptorProto_NonNullType) isTypeDescriptorProto_Type() {}

type NamedTypeDescriptorProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *NamedTypeDescriptorProto) Reset() {
	*x = NamedTypeDescriptorProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_descriptor_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NamedTypeDescriptorProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamedTypeDescriptorProto) ProtoMessage() {}

func (x *NamedTypeDescriptorProto) ProtoReflect() protoreflect.Message {
	mi := &file_descriptor_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamedTypeDescriptorProto.ProtoReflect.Descriptor instead.
func (*NamedTypeDescriptorProto) Descriptor() ([]byte, []int) {
	return file_descriptor_proto_rawDescGZIP(), []int{24}
}

func (x *NamedTypeDescriptorProto) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ListTypeDescriptorProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type *TypeDescriptorProto `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *ListTypeDescriptorProto) Reset() {
	*x = ListTypeDescriptorProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_descriptor_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTypeDescriptorProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTypeDescriptorProto) ProtoMessage() {}

func (x *ListTypeDescriptorProto) ProtoReflect() protoreflect.Message {
	mi := &file_descriptor_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTypeDescriptorProto.ProtoReflect.Descriptor instead.
func (*ListTypeDescriptorProto) Descriptor() ([]byte, []int) {
	return file_descriptor_proto_rawDescGZIP(), []int{25}
}

func (x *ListTypeDescriptorProto) GetType() *TypeDescriptorProto {
	if x != nil {
		return x.Type
	}
	return nil
}

type NonNullTypeDescriptorProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//	*NonNullTypeDescriptorProto_NamedType
	//	*NonNullTypeDescriptorProto_ListType
	Type isNonNullTypeDescriptorProto_Type `protobuf_oneof:"type"`
}

func (x *NonNullTypeDescriptorProto) Reset() {
	*x = NonNullTypeDescriptorProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_descriptor_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NonNullTypeDescriptorProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NonNullTypeDescriptorProto) ProtoMessage() {}

func (x *NonNullTypeDescriptorProto) ProtoReflect() protoreflect.Message {
	mi := &file_descriptor_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NonNullTypeDescriptorProto.ProtoReflect.Descriptor instead.
func (*NonNullTypeDescriptorProto) Descriptor() ([]byte, []int) {
	return file_descriptor_proto_rawDescGZIP(), []int{26}
}

func (m *NonNullTypeDescriptorProto) GetType() isNonNullTypeDescriptorProto_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *NonNullTypeDescriptorProto) GetNamedType() *NamedTypeDescriptorProto {
	if x, ok := x.GetType().(*NonNullTypeDescriptorProto_NamedType); ok {
		return x.NamedType
	}
	return nil
}

func (x *NonNullTypeDescriptorProto) GetListType() *ListTypeDescriptorProto {
	if x, ok := x.GetType().(*NonNullTypeDescriptorProto_ListType); ok {
		return x.ListType
	}
	return nil
}

type isNonNullTypeDescriptorProto_Type interface {
	isNonNullTypeDescriptorProto_Type()
}

type NonNullTypeDescriptorProto_NamedType struct {
	NamedType *NamedTypeDescriptorProto `protobuf:"bytes,1,opt,name=named_type,json=namedType,proto3,oneof"`
}

type NonNullTypeDescriptorProto_ListType struct {
	ListType *ListTypeDescriptorProto `protobuf:"bytes,2,opt,name=list_type,json=listType,proto3,oneof"`
}

func (*NonNullTypeDescriptorProto_NamedType) isNonNullTypeDescriptorProto_Type() {}

func (*NonNullTypeDescriptorProto_ListType) isNonNullTypeDescriptorProto_Type() {}

type DirectiveDescriptorProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string                     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Arguments []*ArgumentDescriptorProto `protobuf:"bytes,2,rep,name=arguments,proto3" json:"arguments,omitempty"`
}

func (x *DirectiveDescriptorProto) Reset() {
	*x = DirectiveDescriptorProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_descriptor_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectiveDescriptorProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectiveDescriptorProto) ProtoMessage() {}

func (x *DirectiveDescriptorProto) ProtoReflect() protoreflect.Message {
	mi := &file_descriptor_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectiveDescriptorProto.ProtoReflect.Descriptor instead.
func (*DirectiveDescriptorProto) Descriptor() ([]byte, []int) {
	return file_descriptor_proto_rawDescGZIP(), []int{27}
}

func (x *DirectiveDescriptorProto) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DirectiveDescriptorProto) GetArguments() []*ArgumentDescriptorProto {
	if x != nil {
		return x.Arguments
	}
	return nil
}

type ArgumentDescriptorProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string                `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value *ValueDescriptorProto `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ArgumentDescriptorProto) Reset() {
	*x = ArgumentDescriptorProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_descriptor_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArgumentDescriptorProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArgumentDescriptorProto) ProtoMessage() {}

func (x *ArgumentDescriptorProto) ProtoReflect() protoreflect.Message {
	mi := &file_descriptor_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArgumentDescriptorProto.ProtoReflect.Descriptor instead.
func (*ArgumentDescriptorProto) Descriptor() ([]byte, []int) {
	return file_descriptor_proto_rawDescGZIP(), []int{28}
}

func (x *ArgumentDescriptorProto) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ArgumentDescriptorProto) GetValue() *ValueDescriptorProto {
	if x != nil {
		return x.Value
	}
	return nil
}

type ValueDescriptorProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//	*ValueDescriptorProto_VariableValue
	//	*ValueDescriptorProto_IntValue
	//	*ValueDescriptorProto_FloatValue
	//	*ValueDescriptorProto_BooleanValue
	//	*ValueDescriptorProto_StringValue
	//	*ValueDescriptorProto_NullValue
	//	*ValueDescriptorProto_EnumValue
	//	*ValueDescriptorProto_ListValue
	//	*ValueDescriptorProto_ObjectValue
	Value isValueDescriptorProto_Value `protobuf_oneof:"value"`
}

func (x *ValueDescriptorProto) Reset() {
	*x = ValueDescriptorProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_descriptor_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValueDescriptorProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValueDescriptorProto) ProtoMessage() {}

func (x *ValueDescriptorProto) ProtoReflect() protoreflect.Message {
	mi := &file_descriptor_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValueDescriptorProto.ProtoReflect.Descriptor instead.
func (*ValueDescriptorProto) Descriptor() ([]byte, []int) {
	return file_descriptor_proto_rawDescGZIP(), []int{29}
}

func (m *ValueDescriptorProto) GetValue() isValueDescriptorProto_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *ValueDescriptorProto) GetVariableValue() *VariableDescriptorProto {
	if x, ok := x.GetValue().(*ValueDescriptorProto_VariableValue); ok {
		return x.VariableValue
	}
	return nil
}

func (x *ValueDescriptorProto) GetIntValue() int32 {
	if x, ok := x.GetValue().(*ValueDescriptorProto_IntValue); ok {
		return x.IntValue
	}
	return 0
}

func (x *ValueDescriptorProto) GetFloatValue() float32 {
	if x, ok := x.GetValue().(*ValueDescriptorProto_FloatValue); ok {
		return x.FloatValue
	}
	return 0
}

func (x *ValueDescriptorProto) GetBooleanValue() bool {
	if x, ok := x.GetValue().(*ValueDescriptorProto_BooleanValue); ok {
		return x.BooleanValue
	}
	return false
}

func (x *ValueDescriptorProto) GetStringValue() string {
	if x, ok := x.GetValue().(*ValueDescriptorProto_StringValue); ok {
		return x.StringValue
	}
	return ""
}

func (x *ValueDescriptorProto) GetNullValue() *NullValueDescriptorProto {
	if x, ok := x.GetValue().(*ValueDescriptorProto_NullValue); ok {
		return x.NullValue
	}
	return nil
}

func (x *ValueDescriptorProto) GetEnumValue() *EnumValueDescriptorProto {
	if x, ok := x.GetValue().(*ValueDescriptorProto_EnumValue); ok {
		return x.EnumValue
	}
	return nil
}

func (x *ValueDescriptorProto) GetListValue() *ListValueDescriptorProto {
	if x, ok := x.GetValue().(*ValueDescriptorProto_ListValue); ok {
		return x.ListValue
	}
	return nil
}

func (x *ValueDescriptorProto) GetObjectValue() *ObjectValueDescriptorProto {
	if x, ok := x.GetValue().(*ValueDescriptorProto_ObjectValue); ok {
		return x.ObjectValue
	}
	return nil
}

type isValueDescriptorProto_Value interface {
	isValueDescriptorProto_Value()
}

type ValueDescriptorProto_VariableValue struct {
	VariableValue *VariableDescriptorProto `protobuf:"bytes,2,opt,name=variable_value,json=variableValue,proto3,oneof"`
}

type ValueDescriptorProto_IntValue struct {
	IntValue int32 `protobuf:"varint,3,opt,name=int_value,json=intValue,proto3,oneof"`
}

type ValueDescriptorProto_FloatValue struct {
	FloatValue float32 `protobuf:"fixed32,4,opt,name=float_value,json=floatValue,proto3,oneof"`
}

type ValueDescriptorProto_BooleanValue struct {
	BooleanValue bool `protobuf:"varint,5,opt,name=boolean_value,json=booleanValue,proto3,oneof"`
}

type ValueDescriptorProto_StringValue struct {
	StringValue string `protobuf:"bytes,6,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type ValueDescriptorProto_NullValue struct {
	NullValue *NullValueDescriptorProto `protobuf:"bytes,7,opt,name=null_value,json=nullValue,proto3,oneof"`
}

type ValueDescriptorProto_EnumValue struct {
	EnumValue *EnumValueDescriptorProto `protobuf:"bytes,8,opt,name=enum_value,json=enumValue,proto3,oneof"`
}

type ValueDescriptorProto_ListValue struct {
	ListValue *ListValueDescriptorProto `protobuf:"bytes,9,opt,name=list_value,json=listValue,proto3,oneof"`
}

type ValueDescriptorProto_ObjectValue struct {
	ObjectValue *ObjectValueDescriptorProto `protobuf:"bytes,10,opt,name=object_value,json=objectValue,proto3,oneof"`
}

func (*ValueDescriptorProto_VariableValue) isValueDescriptorProto_Value() {}

func (*ValueDescriptorProto_IntValue) isValueDescriptorProto_Value() {}

func (*ValueDescriptorProto_FloatValue) isValueDescriptorProto_Value() {}

func (*ValueDescriptorProto_BooleanValue) isValueDescriptorProto_Value() {}

func (*ValueDescriptorProto_StringValue) isValueDescriptorProto_Value() {}

func (*ValueDescriptorProto_NullValue) isValueDescriptorProto_Value() {}

func (*ValueDescriptorProto_EnumValue) isValueDescriptorProto_Value() {}

func (*ValueDescriptorProto_ListValue) isValueDescriptorProto_Value() {}

func (*ValueDescriptorProto_ObjectValue) isValueDescriptorProto_Value() {}

type VariableDescriptorProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *VariableDescriptorProto) Reset() {
	*x = VariableDescriptorProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_descriptor_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VariableDescriptorProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VariableDescriptorProto) ProtoMessage() {}

func (x *VariableDescriptorProto) ProtoReflect() protoreflect.Message {
	mi := &file_descriptor_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VariableDescriptorProto.ProtoReflect.Descriptor instead.
func (*VariableDescriptorProto) Descriptor() ([]byte, []int) {
	return file_descriptor_proto_rawDescGZIP(), []int{30}
}

func (x *VariableDescriptorProto) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type NullValueDescriptorProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *NullValueDescriptorProto) Reset() {
	*x = NullValueDescriptorProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_descriptor_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NullValueDescriptorProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NullValueDescriptorProto) ProtoMessage() {}

func (x *NullValueDescriptorProto) ProtoReflect() protoreflect.Message {
	mi := &file_descriptor_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NullValueDescriptorProto.ProtoReflect.Descriptor instead.
func (*NullValueDescriptorProto) Descriptor() ([]byte, []int) {
	return file_descriptor_proto_rawDescGZIP(), []int{31}
}

func (x *NullValueDescriptorProto) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type EnumValueDescriptorProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *EnumValueDescriptorProto) Reset() {
	*x = EnumValueDescriptorProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_descriptor_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnumValueDescriptorProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnumValueDescriptorProto) ProtoMessage() {}

func (x *EnumValueDescriptorProto) ProtoReflect() protoreflect.Message {
	mi := &file_descriptor_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnumValueDescriptorProto.ProtoReflect.Descriptor instead.
func (*EnumValueDescriptorProto) Descriptor() ([]byte, []int) {
	return file_descriptor_proto_rawDescGZIP(), []int{32}
}

func (x *EnumValueDescriptorProto) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type ListValueDescriptorProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []*ValueDescriptorProto `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *ListValueDescriptorProto) Reset() {
	*x = ListValueDescriptorProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_descriptor_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListValueDescriptorProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListValueDescriptorProto) ProtoMessage() {}

func (x *ListValueDescriptorProto) ProtoReflect() protoreflect.Message {
	mi := &file_descriptor_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListValueDescriptorProto.ProtoReflect.Descriptor instead.
func (*ListValueDescriptorProto) Descriptor() ([]byte, []int) {
	return file_descriptor_proto_rawDescGZIP(), []int{33}
}

func (x *ListValueDescriptorProto) GetValues() []*ValueDescriptorProto {
	if x != nil {
		return x.Values
	}
	return nil
}

type ObjectValueDescriptorProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields []*ObjectFieldDescriptorProto `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *ObjectValueDescriptorProto) Reset() {
	*x = ObjectValueDescriptorProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_descriptor_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectValueDescriptorProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectValueDescriptorProto) ProtoMessage() {}

func (x *ObjectValueDescriptorProto) ProtoReflect() protoreflect.Message {
	mi := &file_descriptor_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectValueDescriptorProto.ProtoReflect.Descriptor instead.
func (*ObjectValueDescriptorProto) Descriptor() ([]byte, []int) {
	return file_descriptor_proto_rawDescGZIP(), []int{34}
}

func (x *ObjectValueDescriptorProto) GetFields() []*ObjectFieldDescriptorProto {
	if x != nil {
		return x.Fields
	}
	return nil
}

type ObjectFieldDescriptorProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string                `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value *ValueDescriptorProto `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ObjectFieldDescriptorProto) Reset() {
	*x = ObjectFieldDescriptorProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_descriptor_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectFieldDescriptorProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectFieldDescriptorProto) ProtoMessage() {}

func (x *ObjectFieldDescriptorProto) ProtoReflect() protoreflect.Message {
	mi := &file_descriptor_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectFieldDescriptorProto.ProtoReflect.Descriptor instead.
func (*ObjectFieldDescriptorProto) Descriptor() ([]byte, []int) {
	return file_descriptor_proto_rawDescGZIP(), []int{35}
}

func (x *ObjectFieldDescriptorProto) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ObjectFieldDescriptorProto) GetValue() *ValueDescriptorProto {
	if x != nil {
		return x.Value
	}
	return nil
}

var File_descriptor_proto protoreflect.FileDescriptor

var file_descriptor_proto_rawDesc = []byte{
	0x0a, 0x10, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x08, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x63, 0x22, 0x48, 0x0a, 0x11,
	0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x53, 0x65,
	0x74, 0x12, 0x33, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x63, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c,
	0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x22, 0xcf, 0x05, 0x0a, 0x15, 0x46, 0x69, 0x6c, 0x65, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x63, 0x2e,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x55, 0x0a,
	0x0f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c,
	0x63, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0e, 0x74, 0x79, 0x70, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4c, 0x0a, 0x0a, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x71, 0x6c, 0x63, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f,
	0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0a, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x73, 0x12, 0x47, 0x0a, 0x07, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x63, 0x2e, 0x53,
	0x63, 0x61, 0x6c, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x52, 0x07, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x73, 0x12, 0x47, 0x0a, 0x07, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x07, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x12, 0x50, 0x0a, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x71, 0x6c, 0x63, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x12, 0x44, 0x0a, 0x06, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c,
	0x63, 0x2e, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x41, 0x0a, 0x05,
	0x65, 0x6e, 0x75, 0x6d, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x71, 0x6c, 0x63, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x05, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x12,
	0x57, 0x0a, 0x0d, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c,
	0x63, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0c, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x22, 0xbe, 0x02, 0x0a, 0x15, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x42, 0x0a, 0x0a, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c,
	0x63, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0a, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x12, 0x43, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x63,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x49, 0x0a, 0x08, 0x6d,
	0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x08, 0x6d, 0x75,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x51, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0c, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xf1, 0x01, 0x0a, 0x22, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x4b, 0x0a, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x71, 0x6c, 0x63, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x48, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c,
	0x63, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xe3, 0x01,
	0x0a, 0x20, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x58, 0x0a, 0x13, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x25, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x63, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x12, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x59, 0x0a, 0x14,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x71, 0x6c, 0x63, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x48, 0x00, 0x52, 0x12, 0x74, 0x79, 0x70, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x9f, 0x01, 0x0a, 0x23, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x42, 0x0a, 0x0a, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x63,
	0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0a, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x73, 0x22, 0x7c, 0x0a, 0x22, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x42, 0x0a, 0x0a, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x63, 0x2e, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0a, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x73, 0x22, 0xb3, 0x02, 0x0a, 0x23, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x50, 0x0a, 0x0a, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x63,
	0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0a, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x42, 0x0a, 0x0a, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71,
	0x6c, 0x63, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0a, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71,
	0x6c, 0x63, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x90, 0x02, 0x0a, 0x22, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x50, 0x0a, 0x0a, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x71, 0x6c, 0x63, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0a, 0x69, 0x6d, 0x70, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x42, 0x0a, 0x0a, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x71, 0x6c, 0x63, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0a,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x06, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x71, 0x6c, 0x63, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0xe4, 0x01, 0x0a,
	0x26, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x42, 0x0a,
	0x0a, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x63, 0x2e, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0a, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x73, 0x12, 0x40, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x63, 0x2e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x06, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x22, 0xc1, 0x01, 0x0a, 0x25, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x42, 0x0a, 0x0a, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x63,
	0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0a, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x63,
	0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0xe5, 0x01, 0x0a, 0x22, 0x55, 0x6e, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x42, 0x0a, 0x0a, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x71, 0x6c, 0x63, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0a, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x12, 0x45, 0x0a, 0x0c, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x63, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22,
	0xcc, 0x01, 0x0a, 0x2b, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x42, 0x0a, 0x0a, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71,
	0x6c, 0x63, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0a, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x12, 0x45, 0x0a, 0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x63, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0xdf,
	0x01, 0x0a, 0x21, 0x45, 0x6e, 0x75, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x42, 0x0a, 0x0a, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x63, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x52, 0x0a, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x12, 0x40,
	0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x63, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x22, 0xc6, 0x01, 0x0a, 0x2a, 0x45, 0x6e, 0x75, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x42, 0x0a, 0x0a, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71,
	0x6c, 0x63, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0a, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71,
	0x6c, 0x63, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0xeb, 0x01, 0x0a, 0x28, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f,
	0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x42, 0x0a, 0x0a,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x63, 0x2e, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0a, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73,
	0x12, 0x45, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x63, 0x2e, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0xd2, 0x01, 0x0a, 0x31, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x42, 0x0a, 0x0a, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x63,
	0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0a, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x73, 0x12, 0x45, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x63,
	0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0xd9, 0x01, 0x0a,
	0x22, 0x54, 0x79, 0x70, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x55, 0x0a, 0x10, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x65, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x63, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x45,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x00, 0x52, 0x0f, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x4f, 0x0a, 0x0e, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x63, 0x2e, 0x54, 0x79,
	0x70, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x00, 0x52, 0x0d, 0x74, 0x79,
	0x70, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x0b, 0x0a, 0x09, 0x65,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xc6, 0x01, 0x0a, 0x1e, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x42, 0x0a, 0x0a, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x63, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x52, 0x0a, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x12,
	0x60, 0x0a, 0x1a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x63, 0x2e, 0x4e,
	0x61, 0x6d, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x18, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0xb2, 0x05, 0x0a, 0x1c, 0x54, 0x79, 0x70, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x62, 0x0a, 0x15, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x63, 0x2e, 0x53, 0x63, 0x61,
	0x6c, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48,
	0x00, 0x52, 0x13, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x62, 0x0a, 0x15, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x63,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x48, 0x00, 0x52, 0x13, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x6b, 0x0a, 0x18, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x65, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x63, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x00, 0x52,
	0x16, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x45, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x69, 0x0a, 0x14, 0x75, 0x6e, 0x69, 0x6f, 0x6e,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x63,
	0x2e, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x00, 0x52, 0x12,
	0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x62, 0x0a, 0x11, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f,
	0x65, 0x78, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x63, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x54, 0x79, 0x70,
	0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x48, 0x00, 0x52, 0x0f, 0x65, 0x6e, 0x75, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x45,
	0x78, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x7c, 0x0a, 0x1b, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x65, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x71, 0x6c, 0x63, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x00, 0x52, 0x18, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x42, 0x10, 0x0a, 0x0e, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x65, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x9c, 0x01, 0x0a, 0x1e, 0x45, 0x6e, 0x75, 0x6d, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x42, 0x0a, 0x0a, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x63,
	0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0a, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x73, 0x22, 0x9a, 0x02, 0x0a, 0x1e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x4b,
	0x0a, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x63, 0x2e, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x52, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x31, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x71, 0x6c, 0x63, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x42,
	0x0a, 0x0a, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x63, 0x2e, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f,
	0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0a, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x73, 0x22, 0x97, 0x02, 0x0a, 0x23, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x31, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x63, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x43, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x71, 0x6c, 0x63, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x42, 0x0a, 0x0a, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x63, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x52, 0x0a, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x22, 0xf0, 0x01, 0x0a,
	0x13, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x43, 0x0a, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x64, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x71, 0x6c, 0x63, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x00, 0x52, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x40, 0x0a, 0x09, 0x6c, 0x69, 0x73,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48,
	0x00, 0x52, 0x08, 0x6c, 0x69, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4a, 0x0a, 0x0d, 0x6e,
	0x6f, 0x6e, 0x5f, 0x6e, 0x75, 0x6c, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x63, 0x2e, 0x4e, 0x6f,
	0x6e, 0x4e, 0x75, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x00, 0x52, 0x0b, 0x6e, 0x6f, 0x6e, 0x4e,
	0x75, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22,
	0x2e, 0x0a, 0x18, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x4c, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x31, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x71, 0x6c, 0x63, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xab, 0x01,
	0x0a, 0x1a, 0x4e, 0x6f, 0x6e, 0x4e, 0x75, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x43, 0x0a, 0x0a,
	0x6e, 0x61, 0x6d, 0x65, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x63, 0x2e, 0x4e, 0x61, 0x6d, 0x65,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x48, 0x00, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x40, 0x0a, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x63, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x00, 0x52, 0x08, 0x6c, 0x69, 0x73, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x6f, 0x0a, 0x18, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x09, 0x61,
	0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x52, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x63, 0x0a, 0x17,
	0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x71, 0x6c, 0x63, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x93, 0x04, 0x0a, 0x14, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x4a, 0x0a, 0x0e, 0x76, 0x61,
	0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x63, 0x2e, 0x56, 0x61,
	0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x00, 0x52, 0x0d, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c,
	0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x08, 0x69, 0x6e, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x0a, 0x0b, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x48, 0x00, 0x52, 0x0a, 0x66, 0x6c,
	0x6f, 0x61, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x25, 0x0a, 0x0d, 0x62, 0x6f, 0x6f, 0x6c,
	0x65, 0x61, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x48,
	0x00, 0x52, 0x0c, 0x62, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x23, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x43, 0x0a, 0x0a, 0x6e, 0x75, 0x6c, 0x6c, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x71, 0x6c, 0x63, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x00, 0x52, 0x09,
	0x6e, 0x75, 0x6c, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x43, 0x0a, 0x0a, 0x65, 0x6e, 0x75,
	0x6d, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x63, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x48, 0x00, 0x52, 0x09, 0x65, 0x6e, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x43,
	0x0a, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x63, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f,
	0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x00, 0x52, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x49, 0x0a, 0x0c, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x71, 0x6c, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48,
	0x00, 0x52, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x07,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2d, 0x0a, 0x17, 0x56, 0x61, 0x72, 0x69, 0x61,
	0x62, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x30, 0x0a, 0x18, 0x4e, 0x75, 0x6c, 0x6c, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x30, 0x0a, 0x18, 0x45, 0x6e, 0x75, 0x6d,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x52, 0x0a, 0x18, 0x4c, 0x69,
	0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f,
	0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x36, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c,
	0x63, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f,
	0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x5a,
	0x0a, 0x1a, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x3c, 0x0a, 0x06,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x66, 0x0a, 0x1a, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x71, 0x6c, 0x63, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x2a, 0x96, 0x01, 0x0a, 0x1b, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x09, 0x0a, 0x05, 0x51, 0x55, 0x45, 0x52, 0x59, 0x10, 0x00, 0x12, 0x0c, 0x0a,
	0x08, 0x4d, 0x55, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x53,
	0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x12, 0x09, 0x0a,
	0x05, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x46, 0x52, 0x41, 0x47,
	0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10,
	0x04, 0x12, 0x13, 0x0a, 0x0f, 0x46, 0x52, 0x41, 0x47, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x50,
	0x52, 0x45, 0x41, 0x44, 0x10, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x4e, 0x4c, 0x49, 0x4e, 0x45,
	0x5f, 0x46, 0x52, 0x41, 0x47, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x06, 0x2a, 0xd2, 0x01, 0x0a, 0x1b,
	0x54, 0x79, 0x70, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0a, 0x0a, 0x06, 0x53,
	0x43, 0x48, 0x45, 0x4d, 0x41, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x43, 0x41, 0x4c, 0x41,
	0x52, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x10, 0x02, 0x12,
	0x14, 0x0a, 0x10, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x49, 0x54,
	0x49, 0x4f, 0x4e, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x41, 0x52, 0x47, 0x55, 0x4d, 0x45, 0x4e,
	0x54, 0x5f, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x04, 0x12, 0x0d,
	0x0a, 0x09, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x46, 0x41, 0x43, 0x45, 0x10, 0x05, 0x12, 0x09, 0x0a,
	0x05, 0x55, 0x4e, 0x49, 0x4f, 0x4e, 0x10, 0x06, 0x12, 0x08, 0x0a, 0x04, 0x45, 0x4e, 0x55, 0x4d,
	0x10, 0x07, 0x12, 0x0e, 0x0a, 0x0a, 0x45, 0x4e, 0x55, 0x4d, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45,
	0x10, 0x08, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x5f, 0x4f, 0x42, 0x4a, 0x45,
	0x43, 0x54, 0x10, 0x09, 0x12, 0x1a, 0x0a, 0x16, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x5f, 0x46, 0x49,
	0x45, 0x4c, 0x44, 0x5f, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x0a,
	0x42, 0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73,
	0x61, 0x6d, 0x6c, 0x69, 0x74, 0x6f, 0x77, 0x69, 0x74, 0x7a, 0x2f, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x71, 0x6c, 0x63, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x63,
	0x3b, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_descriptor_proto_rawDescOnce sync.Once
	file_descriptor_proto_rawDescData = file_descriptor_proto_rawDesc
)

func file_descriptor_proto_rawDescGZIP() []byte {
	file_descriptor_proto_rawDescOnce.Do(func() {
		file_descriptor_proto_rawDescData = protoimpl.X.CompressGZIP(file_descriptor_proto_rawDescData)
	})
	return file_descriptor_proto_rawDescData
}

var file_descriptor_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_descriptor_proto_msgTypes = make([]protoimpl.MessageInfo, 36)
var file_descriptor_proto_goTypes = []interface{}{
	(ExecutableDirectiveLocation)(0),                          // 0: graphqlc.ExecutableDirectiveLocation
	(TypeSystemDirectiveLocation)(0),                          // 1: graphqlc.TypeSystemDirectiveLocation
	(*FileDescriptorSet)(nil),                                 // 2: graphqlc.FileDescriptorSet
	(*FileDescriptorGraphql)(nil),                             // 3: graphqlc.FileDescriptorGraphql
	(*SchemaDescriptorProto)(nil),                             // 4: graphqlc.SchemaDescriptorProto
	(*DirectiveDefinitionDescriptorProto)(nil),                // 5: graphqlc.DirectiveDefinitionDescriptorProto
	(*DirectiveLocationDescriptorProto)(nil),                  // 6: graphqlc.DirectiveLocationDescriptorProto
	(*ScalarTypeDefinitionDescriptorProto)(nil),               // 7: graphqlc.ScalarTypeDefinitionDescriptorProto
	(*ScalarTypeExtensionDescriptorProto)(nil),                // 8: graphqlc.ScalarTypeExtensionDescriptorProto
	(*ObjectTypeDefinitionDescriptorProto)(nil),               // 9: graphqlc.ObjectTypeDefinitionDescriptorProto
	(*ObjectTypeExtensionDescriptorProto)(nil),                // 10: graphqlc.ObjectTypeExtensionDescriptorProto
	(*InterfaceTypeDefinitionDescriptorProto)(nil),            // 11: graphqlc.InterfaceTypeDefinitionDescriptorProto
	(*InterfaceTypeExtensionDescriptorProto)(nil),             // 12: graphqlc.InterfaceTypeExtensionDescriptorProto
	(*UnionTypeDefinitionDescriptorProto)(nil),                // 13: graphqlc.UnionTypeDefinitionDescriptorProto
	(*UnionTypeExtensionDefinitionDescriptorProto)(nil),       // 14: graphqlc.UnionTypeExtensionDefinitionDescriptorProto
	(*EnumTypeDefinitionDescriptorProto)(nil),                 // 15: graphqlc.EnumTypeDefinitionDescriptorProto
	(*EnumTypeExtensionDefinitionDescriptorProto)(nil),        // 16: graphqlc.EnumTypeExtensionDefinitionDescriptorProto
	(*InputObjectTypeDefinitionDescriptorProto)(nil),          // 17: graphqlc.InputObjectTypeDefinitionDescriptorProto
	(*InputObjectTypeExtensionDefinitionDescriptorProto)(nil), // 18: graphqlc.InputObjectTypeExtensionDefinitionDescriptorProto
	(*TypeSystemExtensionDescriptorProto)(nil),                // 19: graphqlc.TypeSystemExtensionDescriptorProto
	(*SchemaExtensionDescriptorProto)(nil),                    // 20: graphqlc.SchemaExtensionDescriptorProto
	(*TypeExtensionDescriptorProto)(nil),                      // 21: graphqlc.TypeExtensionDescriptorProto
	(*EnumValueDefinitionDescription)(nil),                    // 22: graphqlc.EnumValueDefinitionDescription
	(*FieldDefinitionDescriptorProto)(nil),                    // 23: graphqlc.FieldDefinitionDescriptorProto
	(*InputValueDefinitionDescriptorProto)(nil),               // 24: graphqlc.InputValueDefinitionDescriptorProto
	(*TypeDescriptorProto)(nil),                               // 25: graphqlc.TypeDescriptorProto
	(*NamedTypeDescriptorProto)(nil),                          // 26: graphqlc.NamedTypeDescriptorProto
	(*ListTypeDescriptorProto)(nil),                           // 27: graphqlc.ListTypeDescriptorProto
	(*NonNullTypeDescriptorProto)(nil),                        // 28: graphqlc.NonNullTypeDescriptorProto
	(*DirectiveDescriptorProto)(nil),                          // 29: graphqlc.DirectiveDescriptorProto
	(*ArgumentDescriptorProto)(nil),                           // 30: graphqlc.ArgumentDescriptorProto
	(*ValueDescriptorProto)(nil),                              // 31: graphqlc.ValueDescriptorProto
	(*VariableDescriptorProto)(nil),                           // 32: graphqlc.VariableDescriptorProto
	(*NullValueDescriptorProto)(nil),                          // 33: graphqlc.NullValueDescriptorProto
	(*EnumValueDescriptorProto)(nil),                          // 34: graphqlc.EnumValueDescriptorProto
	(*ListValueDescriptorProto)(nil),                          // 35: graphqlc.ListValueDescriptorProto
	(*ObjectValueDescriptorProto)(nil),                        // 36: graphqlc.ObjectValueDescriptorProto
	(*ObjectFieldDescriptorProto)(nil),                        // 37: graphqlc.ObjectFieldDescriptorProto
}
var file_descriptor_proto_depIdxs = []int32{
	3,  // 0: graphqlc.FileDescriptorSet.file:type_name -> graphqlc.FileDescriptorGraphql
	4,  // 1: graphqlc.FileDescriptorGraphql.schema:type_name -> graphqlc.SchemaDescriptorProto
	19, // 2: graphqlc.FileDescriptorGraphql.type_extensions:type_name -> graphqlc.TypeSystemExtensionDescriptorProto
	5,  // 3: graphqlc.FileDescriptorGraphql.directives:type_name -> graphqlc.DirectiveDefinitionDescriptorProto
	7,  // 4: graphqlc.FileDescriptorGraphql.scalars:type_name -> graphqlc.ScalarTypeDefinitionDescriptorProto
	9,  // 5: graphqlc.FileDescriptorGraphql.objects:type_name -> graphqlc.ObjectTypeDefinitionDescriptorProto
	11, // 6: graphqlc.FileDescriptorGraphql.interfaces:type_name -> graphqlc.InterfaceTypeDefinitionDescriptorProto
	13, // 7: graphqlc.FileDescriptorGraphql.unions:type_name -> graphqlc.UnionTypeDefinitionDescriptorProto
	15, // 8: graphqlc.FileDescriptorGraphql.enums:type_name -> graphqlc.EnumTypeDefinitionDescriptorProto
	17, // 9: graphqlc.FileDescriptorGraphql.input_objects:type_name -> graphqlc.InputObjectTypeDefinitionDescriptorProto
	29, // 10: graphqlc.SchemaDescriptorProto.directives:type_name -> graphqlc.DirectiveDescriptorProto
	9,  // 11: graphqlc.SchemaDescriptorProto.query:type_name -> graphqlc.ObjectTypeDefinitionDescriptorProto
	9,  // 12: graphqlc.SchemaDescriptorProto.mutation:type_name -> graphqlc.ObjectTypeDefinitionDescriptorProto
	9,  // 13: graphqlc.SchemaDescriptorProto.subscription:type_name -> graphqlc.ObjectTypeDefinitionDescriptorProto
	24, // 14: graphqlc.DirectiveDefinitionDescriptorProto.arguments:type_name -> graphqlc.InputValueDefinitionDescriptorProto
	6,  // 15: graphqlc.DirectiveDefinitionDescriptorProto.locations:type_name -> graphqlc.DirectiveLocationDescriptorProto
	0,  // 16: graphqlc.DirectiveLocationDescriptorProto.executable_location:type_name -> graphqlc.ExecutableDirectiveLocation
	1,  // 17: graphqlc.DirectiveLocationDescriptorProto.type_system_location:type_name -> graphqlc.TypeSystemDirectiveLocation
	29, // 18: graphqlc.ScalarTypeDefinitionDescriptorProto.directives:type_name -> graphqlc.DirectiveDescriptorProto
	29, // 19: graphqlc.ScalarTypeExtensionDescriptorProto.directives:type_name -> graphqlc.DirectiveDescriptorProto
	11, // 20: graphqlc.ObjectTypeDefinitionDescriptorProto.implements:type_name -> graphqlc.InterfaceTypeDefinitionDescriptorProto
	29, // 21: graphqlc.ObjectTypeDefinitionDescriptorProto.directives:type_name -> graphqlc.DirectiveDescriptorProto
	23, // 22: graphqlc.ObjectTypeDefinitionDescriptorProto.fields:type_name -> graphqlc.FieldDefinitionDescriptorProto
	11, // 23: graphqlc.ObjectTypeExtensionDescriptorProto.implements:type_name -> graphqlc.InterfaceTypeDefinitionDescriptorProto
	29, // 24: graphqlc.ObjectTypeExtensionDescriptorProto.directives:type_name -> graphqlc.DirectiveDescriptorProto
	23, // 25: graphqlc.ObjectTypeExtensionDescriptorProto.fields:type_name -> graphqlc.FieldDefinitionDescriptorProto
	29, // 26: graphqlc.InterfaceTypeDefinitionDescriptorProto.directives:type_name -> graphqlc.DirectiveDescriptorProto
	23, // 27: graphqlc.InterfaceTypeDefinitionDescriptorProto.fields:type_name -> graphqlc.FieldDefinitionDescriptorProto
	29, // 28: graphqlc.InterfaceTypeExtensionDescriptorProto.directives:type_name -> graphqlc.DirectiveDescriptorProto
	23, // 29: graphqlc.InterfaceTypeExtensionDescriptorProto.fields:type_name -> graphqlc.FieldDefinitionDescriptorProto
	29, // 30: graphqlc.UnionTypeDefinitionDescriptorProto.directives:type_name -> graphqlc.DirectiveDescriptorProto
	26, // 31: graphqlc.UnionTypeDefinitionDescriptorProto.member_types:type_name -> graphqlc.NamedTypeDescriptorProto
	29, // 32: graphqlc.UnionTypeExtensionDefinitionDescriptorProto.directives:type_name -> graphqlc.DirectiveDescriptorProto
	26, // 33: graphqlc.UnionTypeExtensionDefinitionDescriptorProto.member_types:type_name -> graphqlc.NamedTypeDescriptorProto
	29, // 34: graphqlc.EnumTypeDefinitionDescriptorProto.directives:type_name -> graphqlc.DirectiveDescriptorProto
	22, // 35: graphqlc.EnumTypeDefinitionDescriptorProto.values:type_name -> graphqlc.EnumValueDefinitionDescription
	29, // 36: graphqlc.EnumTypeExtensionDefinitionDescriptorProto.directives:type_name -> graphqlc.DirectiveDescriptorProto
	22, // 37: graphqlc.EnumTypeExtensionDefinitionDescriptorProto.values:type_name -> graphqlc.EnumValueDefinitionDescription
	29, // 38: graphqlc.InputObjectTypeDefinitionDescriptorProto.directives:type_name -> graphqlc.DirectiveDescriptorProto
	24, // 39: graphqlc.InputObjectTypeDefinitionDescriptorProto.fields:type_name -> graphqlc.InputValueDefinitionDescriptorProto
	29, // 40: graphqlc.InputObjectTypeExtensionDefinitionDescriptorProto.directives:type_name -> graphqlc.DirectiveDescriptorProto
	24, // 41: graphqlc.InputObjectTypeExtensionDefinitionDescriptorProto.fields:type_name -> graphqlc.InputValueDefinitionDescriptorProto
	20, // 42: graphqlc.TypeSystemExtensionDescriptorProto.schema_extension:type_name -> graphqlc.SchemaExtensionDescriptorProto
	21, // 43: graphqlc.TypeSystemExtensionDescriptorProto.type_extension:type_name -> graphqlc.TypeExtensionDescriptorProto
	29, // 44: graphqlc.SchemaExtensionDescriptorProto.directives:type_name -> graphqlc.DirectiveDescriptorProto
	26, // 45: graphqlc.SchemaExtensionDescriptorProto.operation_type_definitions:type_name -> graphqlc.NamedTypeDescriptorProto
	8,  // 46: graphqlc.TypeExtensionDescriptorProto.scalar_type_extension:type_name -> graphqlc.ScalarTypeExtensionDescriptorProto
	10, // 47: graphqlc.TypeExtensionDescriptorProto.object_type_extension:type_name -> graphqlc.ObjectTypeExtensionDescriptorProto
	12, // 48: graphqlc.TypeExtensionDescriptorProto.interface_type_extension:type_name -> graphqlc.InterfaceTypeExtensionDescriptorProto
	14, // 49: graphqlc.TypeExtensionDescriptorProto.union_type_extension:type_name -> graphqlc.UnionTypeExtensionDefinitionDescriptorProto
	16, // 50: graphqlc.TypeExtensionDescriptorProto.enum_type_extions:type_name -> graphqlc.EnumTypeExtensionDefinitionDescriptorProto
	18, // 51: graphqlc.TypeExtensionDescriptorProto.input_object_type_extension:type_name -> graphqlc.InputObjectTypeExtensionDefinitionDescriptorProto
	29, // 52: graphqlc.EnumValueDefinitionDescription.directives:type_name -> graphqlc.DirectiveDescriptorProto
	24, // 53: graphqlc.FieldDefinitionDescriptorProto.arguments:type_name -> graphqlc.InputValueDefinitionDescriptorProto
	25, // 54: graphqlc.FieldDefinitionDescriptorProto.type:type_name -> graphqlc.TypeDescriptorProto
	29, // 55: graphqlc.FieldDefinitionDescriptorProto.directives:type_name -> graphqlc.DirectiveDescriptorProto
	25, // 56: graphqlc.InputValueDefinitionDescriptorProto.type:type_name -> graphqlc.TypeDescriptorProto
	31, // 57: graphqlc.InputValueDefinitionDescriptorProto.default_value:type_name -> graphqlc.ValueDescriptorProto
	29, // 58: graphqlc.InputValueDefinitionDescriptorProto.directives:type_name -> graphqlc.DirectiveDescriptorProto
	26, // 59: graphqlc.TypeDescriptorProto.named_type:type_name -> graphqlc.NamedTypeDescriptorProto
	27, // 60: graphqlc.TypeDescriptorProto.list_type:type_name -> graphqlc.ListTypeDescriptorProto
	28, // 61: graphqlc.TypeDescriptorProto.non_null_type:type_name -> graphqlc.NonNullTypeDescriptorProto
	25, // 62: graphqlc.ListTypeDescriptorProto.type:type_name -> graphqlc.TypeDescriptorProto
	26, // 63: graphqlc.NonNullTypeDescriptorProto.named_type:type_name -> graphqlc.NamedTypeDescriptorProto
	27, // 64: graphqlc.NonNullTypeDescriptorProto.list_type:type_name -> graphqlc.ListTypeDescriptorProto
	30, // 65: graphqlc.DirectiveDescriptorProto.arguments:type_name -> graphqlc.ArgumentDescriptorProto
	31, // 66: graphqlc.ArgumentDescriptorProto.value:type_name -> graphqlc.ValueDescriptorProto
	32, // 67: graphqlc.ValueDescriptorProto.variable_value:type_name -> graphqlc.VariableDescriptorProto
	33, // 68: graphqlc.ValueDescriptorProto.null_value:type_name -> graphqlc.NullValueDescriptorProto
	34, // 69: graphqlc.ValueDescriptorProto.enum_value:type_name -> graphqlc.EnumValueDescriptorProto
	35, // 70: graphqlc.ValueDescriptorProto.list_value:type_name -> graphqlc.ListValueDescriptorProto
	36, // 71: graphqlc.ValueDescriptorProto.object_value:type_name -> graphqlc.ObjectValueDescriptorProto
	31, // 72: graphqlc.ListValueDescriptorProto.values:type_name -> graphqlc.ValueDescriptorProto
	37, // 73: graphqlc.ObjectValueDescriptorProto.fields:type_name -> graphqlc.ObjectFieldDescriptorProto
	31, // 74: graphqlc.ObjectFieldDescriptorProto.value:type_name -> graphqlc.ValueDescriptorProto
	75, // [75:75] is the sub-list for method output_type
	75, // [75:75] is the sub-list for method input_type
	75, // [75:75] is the sub-list for extension type_name
	75, // [75:75] is the sub-list for extension extendee
	0,  // [0:75] is the sub-list for field type_name
}

func init() { file_descriptor_proto_init() }
func file_descriptor_proto_init() {
	if File_descriptor_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_descriptor_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileDescriptorSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_descriptor_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileDescriptorGraphql); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_descriptor_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchemaDescriptorProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_descriptor_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectiveDefinitionDescriptorProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_descriptor_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectiveLocationDescriptorProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_descriptor_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScalarTypeDefinitionDescriptorProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_descriptor_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScalarTypeExtensionDescriptorProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_descriptor_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectTypeDefinitionDescriptorProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_descriptor_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectTypeExtensionDescriptorProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_descriptor_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterfaceTypeDefinitionDescriptorProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_descriptor_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterfaceTypeExtensionDescriptorProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_descriptor_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnionTypeDefinitionDescriptorProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_descriptor_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnionTypeExtensionDefinitionDescriptorProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_descriptor_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnumTypeDefinitionDescriptorProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_descriptor_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnumTypeExtensionDefinitionDescriptorProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_descriptor_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InputObjectTypeDefinitionDescriptorProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_descriptor_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InputObjectTypeExtensionDefinitionDescriptorProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_descriptor_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypeSystemExtensionDescriptorProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_descriptor_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchemaExtensionDescriptorProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_descriptor_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypeExtensionDescriptorProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_descriptor_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnumValueDefinitionDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_descriptor_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldDefinitionDescriptorProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_descriptor_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InputValueDefinitionDescriptorProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_descriptor_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypeDescriptorProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_descriptor_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NamedTypeDescriptorProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_descriptor_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTypeDescriptorProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_descriptor_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NonNullTypeDescriptorProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_descriptor_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectiveDescriptorProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_descriptor_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArgumentDescriptorProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_descriptor_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValueDescriptorProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_descriptor_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VariableDescriptorProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_descriptor_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NullValueDescriptorProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_descriptor_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnumValueDescriptorProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_descriptor_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListValueDescriptorProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_descriptor_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectValueDescriptorProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_descriptor_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectFieldDescriptorProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_descriptor_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*DirectiveLocationDescriptorProto_ExecutableLocation)(nil),
		(*DirectiveLocationDescriptorProto_TypeSystemLocation)(nil),
	}
	file_descriptor_proto_msgTypes[17].OneofWrappers = []interface{}{
		(*TypeSystemExtensionDescriptorProto_SchemaExtension)(nil),
		(*TypeSystemExtensionDescriptorProto_TypeExtension)(nil),
	}
	file_descriptor_proto_msgTypes[19].OneofWrappers = []interface{}{
		(*TypeExtensionDescriptorProto_ScalarTypeExtension)(nil),
		(*TypeExtensionDescriptorProto_ObjectTypeExtension)(nil),
		(*TypeExtensionDescriptorProto_InterfaceTypeExtension)(nil),
		(*TypeExtensionDescriptorProto_UnionTypeExtension)(nil),
		(*TypeExtensionDescriptorProto_EnumTypeExtions)(nil),
		(*TypeExtensionDescriptorProto_InputObjectTypeExtension)(nil),
	}
	file_descriptor_proto_msgTypes[23].OneofWrappers = []interface{}{
		(*TypeDescriptorProto_NamedType)(nil),
		(*TypeDescriptorProto_ListType)(nil),
		(*TypeDescriptorProto_NonNullType)(nil),
	}
	file_descriptor_proto_msgTypes[26].OneofWrappers = []interface{}{
		(*NonNullTypeDescriptorProto_NamedType)(nil),
		(*NonNullTypeDescriptorProto_ListType)(nil),
	}
	file_descriptor_proto_msgTypes[29].OneofWrappers = []interface{}{
		(*ValueDescriptorProto_VariableValue)(nil),
		(*ValueDescriptorProto_IntValue)(nil),
		(*ValueDescriptorProto_FloatValue)(nil),
		(*ValueDescriptorProto_BooleanValue)(nil),
		(*ValueDescriptorProto_StringValue)(nil),
		(*ValueDescriptorProto_NullValue)(nil),
		(*ValueDescriptorProto_EnumValue)(nil),
		(*ValueDescriptorProto_ListValue)(nil),
		(*ValueDescriptorProto_ObjectValue)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_descriptor_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   36,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_descriptor_proto_goTypes,
		DependencyIndexes: file_descriptor_proto_depIdxs,
		EnumInfos:         file_descriptor_proto_enumTypes,
		MessageInfos:      file_descriptor_proto_msgTypes,
	}.Build()
	File_descriptor_proto = out.File
	file_descriptor_proto_rawDesc = nil
	file_descriptor_proto_goTypes = nil
	file_descriptor_proto_depIdxs = nil
}
